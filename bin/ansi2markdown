#!/bin/bash
set -o pipefail

printUsage()
{
    ansi2htmltags --help 2>&1 | sed \
	-e '1s#^.*$#Convert (some basic) ANSI escape sequences to Markdown format [with http(s):// URLs turned into a link].#' \
	-e '2b removeFirstParagraphLoop' \
	-e '/^ *--tag|-t/b removeOptionLoop' \
	-e '/^SEE ALSO:$/,$d' \
	-e '/^Usage:$/N' -e '/\(^\|\n\)Usage: */{ s/\(^\|\n\)\(Usage: *\)\?\([^ ]\+ \)*ansi2htmltags /\1\2'"$(basename "$1")"' /; s/\[-t|--tag [^]]\+\]// }' \
	-e '/^Example:$/N' -e '/\(^\|\n\)Example: */{ s/\(^\|\n\)\(Example: *\)\?ansi2htmltags .*/\1\2'"$(basename "$1") -n / }" \
	-e b -e :removeFirstParagraphLoop -e '{ /\(^\|\n\)$/{ s/^\(.*\n\)\?//; b; }; N; b removeFirstParagraphLoop }' \
	-e b -e :removeOptionLoop -e '{ /\n *--tag|-t[^\n]*$/{ N; b removeOptionLoop; }; /\n *--[^\n]*$\|\n[^	 ]\|\n$/{ s/^\(.*\n\)\?//; b; }; N; b removeOptionLoop }'
}

typeset -a ansi2htmlArgs=()
typeset -a linkSedProcessing=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-html-escaping|-N)
			ansi2htmlArgs+=("$1"); shift;;
	--linkify|-l)
		    shift
		    readonly urlParsePattern='\(https\?://\)\([^/]\+\)/\([^? ]*/\)\?\([^?/ ]*/\?\)\+\(?[^ ]\+\)\?'
		    case "$1" in
			host)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\2](&)#g");;
			path)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\3\4](&)#g");;
			leaf)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\4](&)#g");;
			noquery)    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\2/\3\4](&)#g");;
			noprotocol) shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\2/\3\4\5](&)#g");;
			whole)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[&](&)#g");;
			*)		   linkSedProcessing=(-e "s#${urlParsePattern}#[&](&)#g");;
		    esac
		    ;;
	--)	    shift; break;;
	-*)	    { echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)	    break;;
    esac
done

sed -e 's@^ \{1,3\}\([^ ]\)@    \1@; t' \
    -e 's@^\[0\?1m\([^]*\)\[0\{0,2\}m$@### \1\n@' \
    -e 's@\[0\?1m\([^]*\)\[0\{0,2\}m@**\1**@' \
    -e 's@\[0\?3m\([^]*\)\[0\{0,2\}m@_\1_@' \
    "${linkSedProcessing[@]}" "$@" | \
	"${ANSI2HTML:-ansi2htmltags}" "${ansi2htmlArgs[@]}" | \
	noansi
