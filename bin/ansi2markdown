#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Convert (some basic) ANSI escape sequences to Markdown format with http:// URLs
turned into a link.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-N|--no-html-escaping] [-l|--linkify [whole|noprotocol|noquery|host|path|leaf]] [--] FILE [...] [-?|-h|--help]'
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[...]'
}

typeset -a ansi2htmlArgs=()
typeset -a linkSedProcessing=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-html-escaping|-N)
			ansi2htmlArgs+=("$1"); shift;;
	--linkify|-l)
		    shift
		    readonly urlParsePattern='\(https\?://\)\([^/]\+\)/\([^? ]*/\)\?\([^?/ ]*/\?\)\+\(?[^ ]\+\)\?'
		    case "$1" in
			host)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\2](&)#g");;
			path)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\3\4](&)#g");;
			leaf)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\4](&)#g");;
			noquery)    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\2/\3\4](&)#g");;
			noprotocol) shift; linkSedProcessing=(-e "s#${urlParsePattern}#[\2/\3\4\5](&)#g");;
			whole)	    shift; linkSedProcessing=(-e "s#${urlParsePattern}#[&](&)#g");;
			*)		   linkSedProcessing=(-e "s#${urlParsePattern}#[&](&)#g");;
		    esac
		    ;;
	--)	    shift; break;;
	-*)	    { echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)	    break;;
    esac
done

sed -e 's@^ \{1,3\}\([^ ]\)@    \1@; t' \
    -e 's@^\[0\?1m\([^]*\)\[0\{0,2\}m$@### \1\n@' \
    -e 's@\[0\?1m\([^]*\)\[0\{0,2\}m@**\1**@' \
    -e 's@\[0\?3m\([^]*\)\[0\{0,2\}m@_\1_@' \
    "${linkSedProcessing[@]}" "$@" | \
	"${ANSI2HTML:-ansi2htmltags}" "${ansi2htmlArgs[@]}" | \
	noansi
